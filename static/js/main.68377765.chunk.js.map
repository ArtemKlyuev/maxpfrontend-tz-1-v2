{"version":3,"sources":["components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Arrow/Arrow.module.css","components/Navigation/NavigationsItems/NavigationItem/NavigationItem.module.css","components/News/NewsItem/NewsItem.module.css","components/Navigation/NavigationsItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Navigation/Toolbar/Toolbar.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","components/UI/GoBack/GoBack.module.css","redux/actions/auth.js","redux/actions/actionTypes.js","components/Navigation/NavigationsItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationsItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Root/Root.js","shared/utility.js","components/UI/Button/Button.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/UserProfile/UserProfile.js","components/Profile/Profile.js","redux/actions/userData.js","components/News/NewsItem/NewsItem.js","redux/actions/news.js","containers/News/News.js","components/UI/Arrow/Arrow.js","components/UI/GoBack/GoBack.js","components/News/NewsItemPage/NewsItemPage.js","components/NotFound/NotFound.js","App.js","redux/reducers/auth.js","redux/reducers/userData.js","redux/reducers/news.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","authSuccess","console","log","localStorage","setItem","type","navigationItem","props","to","link","exact","className","classes","NavigationItem","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","drawerToggleClicked","Toolbar","isMobile","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","join","closed","Layout","state","showSideDrawer","checkDimensions","window","innerWidth","setState","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","addEventListener","this","removeEventListener","Fragment","Content","React","Component","root","style","textAlign","updateObject","oldObj","updatedProps","checkValidity","value","rules","isValid","required","trim","button","Button","disabled","input","inputEl","inputClasses","Input_General","invalid","shouldValidate","touched","push","Invalid","elementType","Input","onChange","changed","placeholder","label","htmlFor","Auth","controls","username","elementConfig","validation","valid","password","minLength","auth","inputChangedHandler","e","controlName","updatedControls","currentTarget","sumbitHandler","preventDefault","onAuth","Number","onSetAuthRedirectPath","formEls","Object","keys","forEach","el","key","redirect","isAuth","authRedirectPath","errorMsg","color","Form","onSubmit","error","connect","loading","dispatch","actions","path","userProfile","name","email","Profile","onFetchUserData","userData","UserProfile","fetch","then","res","ok","Error","statusText","json","data","fetchUserDataSuccess","catch","err","onMoreInfoClicked","newsItem","description","publishedAt","title","url","urlToImage","isPreview","index","date","Date","hours","getHours","minutes","getMinutes","String","length","time","day","getDate","month","getMonth","year","getFullYear","dateStr","activeClass","NewsItem_preview","NewsItem_full","moreInfoBtn","location","pathname","News","onFetchNews","news","isNewsPreview","match","totalNews","map","item","i","NewsItem","isMoreInfoClicked","fullNewsItemToLoad","articles","fetchNewsSuccess","arrow","rotate","direction","left","down","up","height","xmlns","viewBox","d","fill","goBack","history","GoBack","Arrow","src","width","alt","href","target","rel","notFound","onTryAutoSignin","JSON","parse","getItem","useEffect","component","NewsItemPage","Root","NotFound","initialstate","authStart","action","authFail","logout","reducer","initialState","fetchUserDataStart","fetchUserDataSuccesss","fetchUserDataFail","fetchNewsStart","fetchNewsFail","moreInfoClicked","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","Boolean","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68377765.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input_General\":\"Input_Input_General__890KW\",\"Input\":\"Input_Input__1G-Rl\",\"InputElement\":\"Input_InputElement__36tz5\",\"Invalid\":\"Input_Invalid__1r3kZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__qpoZz\",\"Open\":\"SideDrawer_Open__3ilrS\",\"Close\":\"SideDrawer_Close__3Sb5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"Arrow_left__1XrI2\",\"down\":\"Arrow_down__xhzBk\",\"up\":\"Arrow_up__1S3L-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__ga-Yn\",\"active\":\"NavigationItem_active__1WsSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsItem_preview\":\"NewsItem_NewsItem_preview__2hbQJ\",\"NewsItem_full\":\"NewsItem_NewsItem_full__3jhyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__rDovH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2YJK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__26JPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__19N6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3P8ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Auth_Form__5TG_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GoBack\":\"GoBack_GoBack__1yaJm\"};","import * as actionTypes from './actionTypes';\n\nexport const authStart = () => ({ type: actionTypes.AUTH_START });\n\nconst authSuccess = () => {\n    console.log('auth success triggered');\n    localStorage.setItem('isAuth', true);\n    return { type: actionTypes.AUTH_SUCCESS };\n};\n\nexport const authFail = () => ({ type: actionTypes.AUTH_FAIL });\n\nexport const auth = (username, password) => {\n    console.log('auth triggered');\n    return (dispatch) => {\n        dispatch(authStart());\n\n        if (username !== 'Admin' || password !== 12345) {\n            dispatch(authFail());\n        } else {\n            dispatch(authSuccess());\n        }\n    };\n};\n\nexport const checkAuthState = () => {\n    return (dispatch) => {\n        const isAuth = JSON.parse(localStorage.getItem('isAuth'));\n        if (!isAuth) {\n            localStorage.setItem('isAuth', false);\n        } else {\n            dispatch(authSuccess());\n        }\n    };\n};\n\nexport const setAuthRedirectPath = (path) => ({\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path\n});\n\nexport const logout = () => ({ type: actionTypes.AUTH_LOGOUT });\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\nexport const FETCH_USER_DATA = 'FETCH_USER_DATA';\nexport const FETCH_USER_DATA_START = 'FETCH_USER_DATA_START';\nexport const FETCH_USER_DATA_FAIL = 'FETCH_USER_DATA_FAIL';\nexport const FETCH_USER_DATA_SUCCESS = 'FETCH_USER_DATA_SUCCESS';\n\nexport const FETCH_NEWS = 'FETCH_NEWS';\nexport const FETCH_NEWS_START = 'FETCH_NEWS_START';\nexport const FETCH_NEWS_FAIL = 'FETCH_NEWS_FAIL';\nexport const FETCH_NEWS_SUCCESS = 'FETCH_NEWS_SUCCESS';\n\nexport const MORE_INFO_CLICKED = 'MORE_INFO_CLICKED';\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n    <NavLink\n        to={props.link}\n        exact={props.exact}\n        className={classes.NavigationItem}\n        activeClassName={classes.active}\n    >\n        {props.children}\n    </NavLink>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.css';\n\nconst navigationItems = (props) => (\n    <nav className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>\n            Главная\n        </NavigationItem>\n        <NavigationItem link=\"/login\">Авторизация</NavigationItem>\n        <NavigationItem link=\"/news\">Новости</NavigationItem>\n        <NavigationItem link=\"/profile\">Профиль</NavigationItem>\n    </nav>\n);\n\nexport default navigationItems;\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = props => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\nimport NavigationItems from '../NavigationsItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\nimport classes from './Toolbar.module.css';\n\nconst toolbar = props => {\n    const drawerToggle = <DrawerToggle clicked={props.drawerToggleClicked} />;\n    const navigationItems = <NavigationItems />;\n    return (\n        <header className={classes.Toolbar}>\n            {props.isMobile && drawerToggle}\n            {!props.isMobile && navigationItems}\n        </header>\n    );\n};\n\nexport default toolbar;\n","import React from 'react';\r\nimport NavigationItems from '../NavigationsItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nconst sideDrawer = props => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <NavigationItems />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React from 'react';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.module.css';\n\nclass Layout extends React.Component {\n    state = { showSideDrawer: false, isMobile: false };\n\n    checkDimensions = () => {\n        const width = window.innerWidth;\n\n        if (width <= 460) {\n            this.setState({ isMobile: true });\n        } else {\n            this.setState({ isMobile: false });\n        }\n    };\n\n    componentDidMount() {\n        window.addEventListener('DOMContentLoaded', this.checkDimensions);\n        window.addEventListener('resize', this.checkDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.checkDimensions);\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    };\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        });\n    };\n\n    render() {\n        const sideDrawer = (\n            <SideDrawer\n                open={this.state.showSideDrawer}\n                closed={this.sideDrawerClosedHandler}\n            />\n        );\n        return (\n            <React.Fragment>\n                <Toolbar\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\n                    isMobile={this.state.isMobile}\n                />\n\n                {this.state.isMobile && sideDrawer}\n\n                <main className={classes.Content}>{this.props.children}</main>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Layout;\n","import React from 'react';\n\nconst root = props => <p style={{ textAlign: 'center' }}>Главная</p>;\n\nexport default root;\n","export const updateObject = (oldObj, updatedProps) => {\n    return {\n        ...oldObj,\n        ...updatedProps\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    return isValid;\n};\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        className={classes.Button}\n        disabled={props.disabled}\n        onClick={props.clicked}\n    >\n        {props.children}\n    </button>\n);\n\nexport default button;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n    let inputEl = null;\n    const inputClasses = [classes.Input_General];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputClasses.push(classes.Input);\n\n            inputEl = (\n                <input\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}\n                    placeholder={props.placeholder}\n                    type={props.type}\n                    required={props.required}\n                />\n            );\n            break;\n        case 'textarea':\n            inputEl = <input />;\n            break;\n        default:\n            inputEl = <input />;\n    }\n\n    const label = (\n        <label htmlFor={inputEl} className={classes.Input_General}>\n            {props.label}\n        </label>\n    );\n\n    return (\n        <div className={classes.Input_General}>\n            {props.label && label}\n            {inputEl}\n        </div>\n    );\n};\n\nexport default input;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { updateObject, checkValidity } from '../../shared/utility';\nimport * as actions from '../../redux/actions/auth';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.module.css';\n\nclass Auth extends React.Component {\n    state = {\n        controls: {\n            username: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Username'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        auth: {\n            username: 'Admin',\n            password: 12345\n        }\n    };\n\n    componentDidMount() {\n        this.props.onSetAuthRedirectPath('/profile');\n    }\n\n    inputChangedHandler = (e, controlName) => {\n        const { controls } = this.state;\n\n        const updatedControls = updateObject(controls, {\n            [controlName]: updateObject(controls[controlName], {\n                value: e.currentTarget.value,\n                valid: checkValidity(\n                    controlName,\n                    controls[controlName].validation\n                ),\n                touched: true\n            })\n        });\n\n        this.setState({ controls: updatedControls });\n    };\n\n    sumbitHandler = (e) => {\n        e.preventDefault();\n\n        const { username, password } = this.state.controls;\n\n        this.props.onAuth(username.value, Number(password.value));\n    };\n\n    render() {\n        const formEls = [];\n        const { controls } = this.state;\n\n        Object.keys(controls).forEach((el) => {\n            // console.log('el', controls[el]);\n            const { type, placeholder } = controls[el].elementConfig;\n            const { required } = controls[el].validation;\n            const { elementType, value, valid, touched } = controls[el];\n\n            const input = (\n                <Input\n                    key={placeholder}\n                    type={type}\n                    placeholder={placeholder}\n                    elementType={elementType}\n                    value={value}\n                    touched={touched}\n                    invalid={valid}\n                    required={required}\n                    changed={(e) => this.inputChangedHandler(e, el)}\n                />\n            );\n\n            formEls.push(input);\n        });\n\n        let redirect = null;\n\n        if (this.props.isAuth) {\n            redirect = <Redirect to={this.props.authRedirectPath} />;\n        }\n\n        const errorMsg = (\n            <p style={{ color: 'red' }}>\n                Имя пользователя или пароль введены не верно\n            </p>\n        );\n\n        return (\n            <React.Fragment>\n                {redirect}\n                <form\n                    className={classes.Form}\n                    onSubmit={(e) => this.sumbitHandler(e)}\n                >\n                    {formEls}\n                    {this.props.error && errorMsg}\n                    <Button>Войти</Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    onAuth: (username, password) => dispatch(actions.auth(username, password)),\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n});\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    error: state.auth.error,\n    loading: state.auth.loading,\n    authRedirectPath: state.auth.authRedirectPath\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Auth);\n","import React from 'react';\n\nconst userProfile = (props) => (\n    <table>\n        <tbody>\n            <tr>\n                <td>Name:</td>\n                <td>{props.name}</td>\n            </tr>\n            <tr>\n                <td>Username:</td>\n                <td>{props.username}</td>\n            </tr>\n            <tr>\n                <td>Email</td>\n                <td>{props.email}</td>\n            </tr>\n        </tbody>\n    </table>\n);\n\nexport default userProfile;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../redux/actions/userData';\nimport UserProfile from '../../components/UserProfile/UserProfile';\n\nclass Profile extends React.Component {\n    componentDidMount() {\n        console.log('kek');\n\n        if (this.props.isAuth) {\n            this.props.onFetchUserData();\n        }\n    }\n\n    render() {\n        const { isAuth, error, userData, loading } = this.props;\n        let redirect = null;\n        let userProfile = <UserProfile {...userData} />;\n\n        if (loading) {\n            userProfile = (\n                <p style={{ textAlign: 'center' }}>\n                    Идёт загрузка данных, пожалуйста, подождите\n                </p>\n            );\n        }\n\n        console.log('this.props', this.props);\n\n        if (!isAuth) {\n            redirect = <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <React.Fragment>\n                {redirect}\n                {error ? (\n                    <p style={{ textAlign: 'center' }}>\n                        Произошла ошибка при загрузке данных\n                    </p>\n                ) : (\n                    userProfile\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    onFetchUserData: () => dispatch(actions.fetchUserData())\n});\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    userData: state.userData.userData,\n    error: state.userData.error,\n    loading: state.userData.loading\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Profile);\n","import * as actionTypes from './actionTypes';\n\nconst fetchUserDataStart = () => ({\n    type: actionTypes.FETCH_USER_DATA_START\n});\n\nconst fetchUserDataSuccess = (data) => ({\n    type: actionTypes.FETCH_USER_DATA_SUCCESS,\n    data\n});\n\nconst fetchUserDataFail = (error) => ({\n    type: actionTypes.FETCH_USER_DATA_FAIL,\n    error\n});\n\nexport const fetchUserData = () => {\n    return (dispatch) => {\n        dispatch(fetchUserDataStart());\n        fetch('https://jsonplaceholder.typicode.com/users/1')\n            .then((res) => {\n                if (!res.ok) {\n                    console.log('res.statusText', res);\n                    throw new Error(res.statusText);\n                }\n                return res.json();\n            })\n            .then((data) => {\n                console.log('data', data);\n                dispatch(fetchUserDataSuccess(data));\n            })\n            .catch((err) => {\n                console.log('user data error', err);\n                dispatch(fetchUserDataFail(err));\n            });\n    };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions/news';\nimport { Link } from 'react-router-dom';\nimport Button from '../../UI/Button/Button';\nimport classes from './NewsItem.module.css';\n\nconst newsItem = (props) => {\n    const {\n        description,\n        publishedAt,\n        title,\n        url,\n        urlToImage,\n        isPreview,\n        index\n    } = props;\n\n    const date = new Date(publishedAt);\n    const hours = date.getHours();\n    let minutes = date.getMinutes();\n\n    if (String(minutes).length === 1) {\n        minutes = '0' + minutes;\n    }\n\n    const time = `${hours}:${minutes}`;\n\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    const dateStr = `${day}/${month}/${year} ${time}`;\n\n    let activeClass = classes.NewsItem_preview;\n\n    if (!isPreview) {\n        activeClass = classes.NewsItem_full;\n    }\n\n    const moreInfoHandler = (e) => {\n        console.log(e.currentTarget);\n        props.onMoreInfoClicked({\n            description,\n            publishedAt,\n            title,\n            url,\n            urlToImage\n        });\n    };\n\n    const moreInfoBtn = (\n        <Link to={(location) => `${location.pathname}/${index}`}>\n            <Button clicked={moreInfoHandler}>Читать далее</Button>\n        </Link>\n    );\n\n    return (\n        <div className={activeClass}>\n            <span>{dateStr} </span>\n            <h3>{title}</h3>\n            {isPreview && moreInfoBtn}\n            {props.children}\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onMoreInfoClicked: (newsItem) => dispatch(actions.moreInfoClicked(newsItem))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(newsItem);\n","import * as actionTypes from './actionTypes';\n\nexport const fetchNewsStart = () => ({ type: actionTypes.FETCH_NEWS_START });\n\nexport const fetchNewsFail = (error) => ({\n    type: actionTypes.FETCH_NEWS_FAIL,\n    error\n});\n\nexport const fetchNewsSuccess = (news) => ({\n    type: actionTypes.FETCH_NEWS_SUCCESS,\n    news\n});\n\nexport const fetchNews = () => {\n    return (dispatch) => {\n        dispatch(fetchNewsStart());\n\n        const startUrl = 'https://newsapi.org/v2/top-headlines';\n        const country = 'ru';\n        const apikey = '131595506e1e4017aeaddc953c9bcd5d';\n        const url = `${startUrl}?country=${country}&apiKey=${apikey}`;\n\n        fetch(url)\n            .then((res) => {\n                if (!res.ok) {\n                    console.log('res.statusText', res);\n                    throw new Error(res.statusText);\n                }\n                return res.json();\n            })\n            .then((news) => {\n                console.log('news', news.articles);\n                dispatch(fetchNewsSuccess(news.articles));\n            })\n            .catch((err) => {\n                console.log('fetch news data fail', err);\n                dispatch(fetchNewsFail(err));\n            });\n    };\n};\n\nexport const moreInfoClicked = (newsItem) => ({\n    type: actionTypes.MORE_INFO_CLICKED,\n    newsItem\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/news';\nimport NewsItem from '../../components/News/NewsItem/NewsItem';\n\nclass News extends React.Component {\n    componentDidMount() {\n        this.props.onFetchNews();\n        console.log('component did mount[this.props.news]', this.props.news);\n    }\n\n    render() {\n        const { news, loading, error } = this.props;\n        const isNewsPreview = this.props.match.url === '/news';\n        let totalNews = (\n            <p style={{ textAlign: 'center' }}>\n                Идёт загрузка данных, пожалуйста, подождите\n            </p>\n        );\n\n        if (!loading) {\n            console.log(typeof news);\n            console.log('news', news);\n            console.log('loading', loading);\n            totalNews = news.map((item, i) => (\n                <NewsItem\n                    key={item.title}\n                    isPreview={isNewsPreview}\n                    index={i + 1}\n                    {...item}\n                />\n            ));\n        }\n\n        console.log('News Props', this.props);\n\n        return (\n            <React.Fragment>\n                {error ? (\n                    <p style={{ textAlign: 'center' }}>\n                        Произошла ошибка при загрузке данных\n                    </p>\n                ) : (\n                    totalNews\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    onFetchNews: () => dispatch(actions.fetchNews())\n});\n\nconst mapStateToProps = (state) => ({\n    news: state.news.news,\n    loading: state.news.loading,\n    error: state.news.error,\n    isMoreInfoClicked: state.news.isMoreInfoClicked,\n    fullNewsItemToLoad: state.news.fullNewsItemToLoad\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(News);\n","import React from 'react';\r\nimport classes from './Arrow.module.css';\r\n\r\nconst arrow = (props) => {\r\n    const { color, direction } = props;\r\n    const defaultColor = '#3dabca';\r\n\r\n    let rotate = '';\r\n\r\n    switch (direction) {\r\n        case 'left':\r\n            rotate = classes.left;\r\n            break;\r\n        case 'down':\r\n            rotate = classes.down;\r\n            break;\r\n        case 'up':\r\n            rotate = classes.up;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <svg\r\n            height=\"14\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 4.53657 8.69699\"\r\n            className={rotate}\r\n        >\r\n            <path\r\n                d=\"\r\n        M.18254,8.697a.18149.18149,0,0,1-.12886-.31034L4.09723,4.34126.05369.29954a.18149.18149,\r\n        0,0,1,.2559-.2559L4.4838,4.21785a.18149.18149,0,0,1,0,.2559L.30958,8.648A.18149.18149,\r\n        0,0,1,.18254,8.697Z\r\n      \"\r\n                fill={color || defaultColor}\r\n            ></path>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default arrow;\r\n","import React from 'react';\r\nimport Arrow from '../Arrow/Arrow';\r\nimport classes from './GoBack.module.css';\r\n\r\nconst goBack = (props) => (\r\n    <div onClick={props.history.goBack} className={classes.GoBack}>\r\n        <Arrow direction={'left'} />\r\n        Назад\r\n    </div>\r\n);\r\n\r\nexport default goBack;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewsItem from '../NewsItem/NewsItem';\nimport GoBack from '../../UI/GoBack/GoBack';\n\nconst newsItemPage = (props) => {\n    if (!props.fullNewsItemToLoad) {\n        return <Redirect to=\"/news\" />;\n    }\n\n    const {\n        description,\n        publishedAt,\n        title,\n        url,\n        urlToImage\n    } = props.fullNewsItemToLoad;\n\n    return (\n        <NewsItem {...{ publishedAt, title }}>\n            <GoBack history={props.history} />\n            <img src={urlToImage} style={{ width: '100%' }} alt=\"News image\" />\n            <p>{description}</p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                Читать в источнике\n            </a>\n        </NewsItem>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    fullNewsItemToLoad: state.news.fullNewsItemToLoad\n});\n\nexport default connect(mapStateToProps)(newsItemPage);\n","import React from 'react';\r\n\r\nconst notFound = (props) => (\r\n    <div style={{ textAlign: 'center' }}>Ничего не найдено :/</div>\r\n);\r\n\r\nexport default notFound;\r\n","import React, { useEffect } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions/auth';\nimport Layout from './hoc/Layout/Layout';\nimport Root from './components/Root/Root';\nimport Auth from './containers/Auth/Auth';\nimport Profile from './components/Profile/Profile';\nimport News from './containers/News/News';\nimport NewsItemPage from './components/News/NewsItemPage/NewsItemPage';\nimport NotFound from './components/NotFound/NotFound';\n\nconst App = (props) => {\n    useEffect(() => props.onTryAutoSignin(), []);\n\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/login\" component={Auth} />\n                <Route path=\"/profile\" component={Profile} />\n                <Route path=\"/news\" exact component={News} />\n                <Route path=\"/news/:id\" component={NewsItemPage} />\n                <Route path=\"/\" exact component={Root} />\n                <Route path=\"*\" component={NotFound} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </Layout>\n    );\n};\n\n// const mapStateToProps = state => ({isAuth:state.isAuth});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onTryAutoSignin: () => dispatch(actions.checkAuthState())\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialstate = {\n    isAuth: false,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => updateObject(state, { loading: true });\n\nconst authSuccess = (state, action) =>\n    updateObject(state, { isAuth: true, error: null, loading: false });\n\nconst authFail = (state, action) =>\n    updateObject(state, { error: true, loading: false });\n\nconst authRedirectPath = (state, action) =>\n    updateObject(state, { authRedirectPath: action.path });\n\nconst logout = (state, action) => updateObject(state, { isAuth: false });\n\nconst reducer = (state = initialstate, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return logout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return authRedirectPath(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    userData: null,\n    error: false,\n    loading: true\n};\n\nconst fetchUserDataStart = (state, action) =>\n    updateObject(state, { error: false, loading: true });\n\nconst fetchUserDataSuccesss = (state, action) =>\n    updateObject(state, {\n        userData: action.data,\n        error: false,\n        loading: false\n    });\n\nconst fetchUserDataFail = (state, action) =>\n    updateObject(state, { error: true, loading: false });\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_USER_DATA_START:\n            return fetchUserDataStart(state, action);\n        case actionTypes.FETCH_USER_DATA_SUCCESS:\n            return fetchUserDataSuccesss(state, action);\n        case actionTypes.FETCH_USER_DATA_FAIL:\n            return fetchUserDataFail(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    news: null,\n    loading: true,\n    error: false,\n    isMoreInfoClicked: false,\n    fullNewsItemToLoad: null\n};\n\nconst fetchNewsStart = (state, action) =>\n    updateObject(state, { loading: true, error: false });\n\nconst fetchNewsFail = (state, action) =>\n    updateObject(state, { loading: false, error: true });\n\nconst fetchNewsSuccess = (state, action) =>\n    updateObject(state, { news: action.news, loading: false, error: false });\n\nconst moreInfoClicked = (state, action) =>\n    updateObject(state, { fullNewsItemToLoad: action.newsItem });\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_NEWS_START:\n            return fetchNewsStart(state, action);\n        case actionTypes.FETCH_NEWS_SUCCESS:\n            return fetchNewsSuccess(state, action);\n        case actionTypes.FETCH_NEWS_FAIL:\n            return fetchNewsFail(state, action);\n        case actionTypes.MORE_INFO_CLICKED:\n            return moreInfoClicked(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './reducers/auth';\nimport userData from './reducers/userData';\nimport news from './reducers/news';\n\nconst composeEnhancers =\n    process.env.NODE_ENV === 'development'\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        : null || compose;\n\nconst rootReducer = combineReducers({ auth, userData, news });\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}